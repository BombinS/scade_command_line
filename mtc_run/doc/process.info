Running Testing Environment MTC Batch Coverage

For certification activities, you run test coverage measures in batch as described below.
Before running any model test coverage analysis, you must verify the Testing Environment
and MTC integrity as detailed in “Verifying Testing Environment Installation Integrity” on
page 192.
This batch command line is intended for running coverage analysis at model level (MTCModel) and code level (MTC-Code) on a project based on test data descriptions 
provided in procedure(s) (STP files) and for producing MTC results in a given directory with respect to
an MTC-specific configuration.

To run model or code coverage in batch from Testing Environment
Use the following command line syntax and options:
Note
When running model test coverage, Testing Environment batch automatically checks test data
(in STP file) for the proper initialization of all sensors and inputs of the tested operator. Any
initialization failure is reported as a warning and does not prevent code execution.

QTE -mtc|-clcm
-conf <configuration>
-test_file <stp file>
-target_dir <dir>
[-mtc|-clcm:<option> [<value>] ]
<project>
[-mtc_dir <dir>] [-mtc_userec] [-cvrt:abs_path] [-cvrt:filter_test]
[-cvrt:process_alias] [-cvrt:single_sss] [-cvrt:legacy]

Possible command options and parameters:
• -mtc|-clcm: to launch respectively MTC-Model or MTC-Code (only acquisition) on specified
project with specified options. Note: before launching MTC-Code acquisition from Testing
Environment, you must launch MTC-Code instrumentation once as detailed in “Running MTC-Code
Instrumentation” on page 777 in SCADE Suite User Manual.
• -conf <configuration>: to specify the name of the configuration with MTC specific settings
• -test_file <stp file>: to specify the path to the STP file containing test data descriptions
required by MTC (see “Producing Test Data for Testing Environment Batch” on page 186)
• -target_dir <dir>: to specify the name of the directory for test execution output files
• -mtc_dir <dir>: to specify the name of the directory where the version of MTC to invoke is
located otherwise Testing Environment uses the MTC version located in Testing Environment
installation directory
• -mtc|-clcm:<option> [<value>]: generic syntax to pass specific options to MTC-Model or MTCCode like -mtc:author <name>
• <project>: to specify the name of (or path to) the ETP project to be verified
Specific command options for MTC compatibility:
• -mtc_userec: to set correct communications between MTC and Testing Environment depending
on MTC version. By default, MTC and Testing Environment communicate via STP files. If the MTC
version specified by -mtc_dir does not support STP files and -test_file option, you must use
-mtc_userec to call MTC with automatically generated REC file and -cvrt:legacy or a subset of
options to activate compatibility options (see below). Note: For MTC versions prior to MTC 6.4.5
you must use the -mtc_userec option.
• -cvrt:abs_path: compatibility option to generate absolute file references in record file (.rec).
Otherwise, they are absolute or relative paths depending on matching entries in the STP file.
• -cvrt:filter_test: compatibility option to exclude test related statements from generated files
(i.e., calls to SSM::check, SSM::uncheck, and SSM::set_tolerance are filtered).
• -cvrt:process_alias: compatibility option to replace operations on alias with operations on the
aliased entities and filter aliases definitions (i.e., calls to SSM::alias).
• -cvrt:single_sss: compatibility option to generate a single SSS file per record defined in the
input STP file.
• -cvrt:legacy: compatibility option to activate all abs_path, filter_test, process_alias, and
single_sss options.
Note
The abs_path, filter_test, process_alias, single_sss and legacy options are also
available when using TEE or THG modules in batch but do not impact their respective output
reports. In this context, they only have an impact on intermediate files intended to be used
for debug on SCADE Suite Simulator for instance.
The abs_path, filter_test, process_alias, single_sss and legacy options have an
impact on the intermediary .rec and .sss files 